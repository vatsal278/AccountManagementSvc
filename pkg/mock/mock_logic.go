// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal278/AccountManagmentSvc/internal/logic (interfaces: AccountManagmentSvcLogicIer)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccountManagmentSvcLogicIer is a mock of AccountManagmentSvcLogicIer interface.
type MockAccountManagmentSvcLogicIer struct {
	ctrl     *gomock.Controller
	recorder *MockAccountManagmentSvcLogicIerMockRecorder
}

// MockAccountManagmentSvcLogicIerMockRecorder is the mock recorder for MockAccountManagmentSvcLogicIer.
type MockAccountManagmentSvcLogicIerMockRecorder struct {
	mock *MockAccountManagmentSvcLogicIer
}

// NewMockAccountManagmentSvcLogicIer creates a new mock instance.
func NewMockAccountManagmentSvcLogicIer(ctrl *gomock.Controller) *MockAccountManagmentSvcLogicIer {
	mock := &MockAccountManagmentSvcLogicIer{ctrl: ctrl}
	mock.recorder = &MockAccountManagmentSvcLogicIerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountManagmentSvcLogicIer) EXPECT() *MockAccountManagmentSvcLogicIerMockRecorder {
	return m.recorder
}

// HealthCheck mocks base method.
func (m *MockAccountManagmentSvcLogicIer) HealthCheck() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockAccountManagmentSvcLogicIerMockRecorder) HealthCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockAccountManagmentSvcLogicIer)(nil).HealthCheck))
}
